@page "/login"
@attribute [AllowAnonymous]

<div class="d-flex justify-center">
    <img src="mkanid.jpeg" Style="height:120px" />
</div>
<div class="fsh-center-text">
    <MudText Typo="Typo.h4" GutterBottom="true">E-Card Portal</MudText>
    <MudText>
    </MudText>
</div>
<br />
<EditForm Model="@_tokenRequest" OnValidSubmit="SubmitAsync" class="justify-center">
    <MudGrid>
        <DataAnnotationsValidator />
        <CustomValidation @ref="_customValidation" />
            <MudItem xs="12">
                <MudTextField T="string" Label="UserName" Variant="Variant.Outlined" @bind-Value="_tokenRequest.UserName"
                              For="@(() => _tokenRequest.UserName)" />
            </MudItem>
            <MudItem xs="12">
                <MudTextField Label="Password" Variant="Variant.Outlined" @bind-Value="_tokenRequest.Password"
                              For="@(() => _tokenRequest.Password)" InputType="@_passwordInput" Adornment="Adornment.End"
                              AdornmentIcon="@_passwordInputIcon" OnAdornmentClick="TogglePasswordVisibility" />
            </MudItem>
            <MudItem xs="12" Class="d-flex justify-center">
                <MudButton ButtonType="ButtonType.Submit" Disabled="BusySubmitting" Variant="Variant.Filled"
                           Style="background-color:#084545; color:white" Size="Size.Large" StartIcon="@Icons.Filled.Login">Sign In</MudButton>
            </MudItem>
    </MudGrid>
    
</EditForm> 
@* <EditForm Model="@_tokenRequest" OnValidSubmit="SubmitAsync" class="form-02-main d-flex justify-center">
      <div class="container-fluid">
        <div class="row">
          <div class="col-md-12">
            <div class="_lk_de">
              <div class="form-03-main">
                <div class="logo">
                  <img src="mkanid.jpeg">
                 
                </div>
                        <div class="fsh-center-text">
                            <MudText Typo="Typo.h6" GutterBottom="true">MKAN Identity Card Portal</MudText>
                            <MudText>
                            </MudText>
                        </div>
                <DataAnnotationsValidator />
                <CustomValidation @ref="_customValidation" />
                <div class="form-group">
                            <MudTextField T="string" Label="UserName" Variant="Variant.Outlined" @bind-Value="_tokenRequest.UserName"
                                          For="@(() => _tokenRequest.UserName)" />
                </div>

                <div class="form-group">
                            <MudTextField Label="Password" Variant="Variant.Outlined" @bind-Value="_tokenRequest.Password"
                                          For="@(() => _tokenRequest.Password)" InputType="@_passwordInput" Adornment="Adornment.End"
                                          AdornmentIcon="@_passwordInputIcon" OnAdornmentClick="TogglePasswordVisibility" />
                </div>
                <div class="form-group">
                            <MudButton ButtonType="ButtonType.Submit" Disabled="BusySubmitting" Variant="Variant.Filled"
                                       Style="background-color:#084545; color:white" Size="Size.Large" StartIcon="@Icons.Filled.Login">Login</MudButton>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </EditForm>  *@

@* Dynamic CSS Injection *@
@code {
    protected override async Task OnInitializedAsync()
    {
        await AddCssLink("login/assets/css/bootstrap.min.css");
        await AddCssLink("login/assets/css/font-awesome.min.css");
        await AddCssLink("login/assets/css/style.css");
    }

    private async Task AddCssLink(string href)
    {
        var script = $"var link = document.createElement('link'); link.rel = 'stylesheet'; link.href = '{href}'; document.head.appendChild(link);";
        await JSRuntime.InvokeVoidAsync("eval", script);
    }

    [Inject]
    private IJSRuntime JSRuntime { get; set; }
}