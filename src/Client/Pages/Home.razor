@page "/"
@using global::Shared.Authorization

<PageTitle>Dashboard - ID Card Management</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="py-4">
    <MudText Typo="Typo.h4">Dashboard ID Card Record</MudText>
    <MudGrid Justify="Justify.Center">
        <!-- Active and Issued Cards -->
        <MudItem xs="12" md="3">
            <StatisticsCard Title="Total Active Cards" Value="@data.TotalActiveCards" Icon="@Icons.Filled.Badge" />
        </MudItem>
        <MudItem xs="12" md="3">
            <StatisticsCard Title="New Cards Issued" Value="@data.NewCardsIssued" Icon="@Icons.Filled.CreditCard" />
        </MudItem>

        <!-- Requests and Approvals -->
        <MudItem xs="12" md="3">
            <StatisticsCard Title="Pending Approvals" Value="@data.PendingApprovals" Icon="@Icons.Filled.HourglassEmpty" />
        </MudItem>
        <MudItem xs="12" md="3">
            <StatisticsCard Title="Total Requests" Value="@data.TotalRequests" Icon="@Icons.Filled.ListAlt" />
        </MudItem>
    </MudGrid>
    <!-- Chart with Dropdown for Time Period -->
    <MudGrid>
        <MudItem xs="12">
            <MudCard>
                <MudCardContent>
                    <MudText Typo="Typo.h5" Class="my-2">Card Record Breakdown</MudText>
                    @*   <MudSelect T="string" Label="Select Time Period" SelectedValue="@selectedPeriod" SelectedValueChanged="@UpdateChart">
                    <MudSelectItem Value="@selectedPeriod" />
                    </MudSelect> *@
                    <MudChart ChartType="ChartType.Bar" ChartSeries="@currentSeries" XAxisLabels="@currentLabels" Height="350px" />
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudContainer>


@code {


    private bool _drawerOpen = true;

    [Inject]
    private IDashboardClient DashboardClient { get; set; }


    private DashboardData data = new();

    private string selectedPeriod = "Monthly";
    private List<ChartSeries> currentSeries;
    private string[] currentLabels;

    

    private Dictionary<string, (List<ChartSeries>, string[])> chartData = new Dictionary<string, (List<ChartSeries>, string[])>
    {
        {"Daily", (new List<ChartSeries>{ /* Data for daily stats */ }, new string[]{ /* Labels for daily stats */ })},
        {"Monthly", (new List<ChartSeries>{
            new ChartSeries() { Name = "Khuddam", Data = new double[] { 40, 20, 25, 27, 46, 46, 48, 44, 15 } },
            new ChartSeries() { Name = "Ansarullah", Data = new double[] { 19, 24, 35, 13, 28, 15, 13, 16, 40 } },
            new ChartSeries() { Name = "Lajna", Data = new double[] { 8, 6, 11, 13, 4, 16, 10, 16, 20 } }
        }, new string[]{ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep" })},
        {"Yearly", (new List<ChartSeries>{ /* Data for yearly stats */ }, new string[]{ /* Labels for yearly stats */ })}
    };

    protected async override Task OnInitializedAsync()
    {
        var dashboardDataResponse = await DashboardClient.GetAsync();
        data = dashboardDataResponse;
        UpdateChart(selectedPeriod);
    }

    private void UpdateChart(string period)
    {
        selectedPeriod = period;
        (currentSeries, currentLabels) = chartData[period];
    }
}
